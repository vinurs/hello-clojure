(ns hello-clojure.funcs.conj)

;; 将x加入到前面的colletion里面去，但是对于不同的collection增加的方法是不一样的
;; 1. 对于list，是增加到头部
;; 2. 对于vector，是增加到尾部
;; (conj coll x)(conj coll x & xs)

(conj '(1 2 3) 4)
;; => (4 1 2 3)


;; 将后面的元素加到前面的collection里面去
(conj [1 2 3] 4)
;; => [1 2 3 4]

(conj [1 ] 2 3 4)

(conj [1 2 3] [4 5 6])
;; => [1 2 3 [4 5 6]]

(conj '(1 2) 3 4)
;;=> (4 3 1 2)

(conj [[1 2] [3 4]] [5 6])
;; => [[1 2] [3 4] [5 6]]

;; 对于map，只接受后面的参数形式为vector，并且只有两个元素
(conj {1 2, 3 4} [5 6 ] [7 8] [9 10])
;; 或者说，接受另一个map作为参数
(conj {1 2 3 4} {5 6})

;; 对于map，就不能接受成对的list
;; (conj {1 2 3 4} {5 6} [7 8] '(12 34))

;; conj on a set
;; 对于set就好弄多了，直接往里加，遇到重复的会自动去掉
(conj #{1 3 4} 2 3 {3 4})
;;=> #{1 2 3 4}
